<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace=绑定一个对应的Dao/Mapper接口-->
<mapper namespace="com.lrm.dao.BlogRepository">

    <!--一、增-->
    <!--1.1增加一个博客-->
    <insert id="save" parameterType="blog" useGeneratedKeys="true" keyProperty="id">
        insert into t_blog (id, title, content, first_picture, flag,
                            views, appreciation, share_statement, commentabled, published,
                            recommend, create_time,update_time, type_id, user_id, description)
        values (#{id}, #{title}, #{content}, #{firstPicture}, #{flag}, #{views}, #{appreciation},
                #{shareStatement}, #{commentabled}, #{published}, #{recommend},#{createTime},
                #{updateTime}, #{type.id}, #{user.id}, #{description});
    </insert>

    <insert id="insertTBlogTags">
        insert into t_blog_tags values
        <foreach collection="tag_id" item="tag_id" index="index" separator=",">
            (null,
            #{blog_id},
            #{tag_id.id}
            )
        </foreach>
    </insert>

    <!--二、删-->
    <!--2.1根据id删除一个博客-->
    <delete id="delete">
        delete
        from t_blog
        where id = #{id}
    </delete>

    <delete id="deleteBlogTags" >
        delete from t_blog_tags where blogs_id = #{blogs_id}
    </delete>

    <!--三、改-->
    <!--3.1根据id修改博客-->
    <update id="update" parameterType="blog">
        update t_blog
        set id=#{id},
            title=#{title},
            content=#{content},
            first_picture=#{firstPicture},
            flag=#{flag},
            views=#{views},
            appreciation=#{appreciation},
            share_statement=#{shareStatement},
            commentabled=#{commentabled},
            published=#{published},
            recommend=#{recommend},
            update_time=#{updateTime},
            type_id=#{type.id},
            user_id=#{user.id},
            description=#{description}
        where id = #{id}
    </update>

    <!--四、查-->
    <!--4.1根据id查找博客-->
    <select id="getById" resultMap="blogType">
        select *
        from t_blog
        where id = #{id}
    </select>
    <!--4.2根据类型查找博客，用去分类页面展示博客-->
    <select id="getByType" resultMap="blogType">
        select *
        from t_blog
        where type_id = #{typeId}
    </select>
    <!--4.3根据关键字查找博客，用于首页查找博客-->
    <select id="getByQuery"  resultMap="blogType">
        select *
        from t_blog
        where content like #{query} or description like #{query} or title like #{query}
    </select>
    <!--4.4获取所有的博客，用于在首页展示博客-->
    <select id="getAll" resultMap="blogType">
        select *
        from t_blog
    </select>
    <!--4.5根据年份获取所有博客，用于归档-->
    <select id="getByYear" resultMap="blogType">
        select * from t_blog where year(create_time) = #{createYear}
    </select>

    <!--4.6获取所有博客的年份字符串-->
    <select id="getBlogCreateYears" resultType="string">
        SELECT YEAR(create_time) Y  FROM t_blog GROUP BY Y order by y desc;
    </select>
    <!--4.7获取博客的总和，用于博客归档时作为总数目-->
    <select id="countAll" resultType="long">
        select count(*) from t_blog
    </select>
    <!--4.8根据标签id获取所有博客，用于标签页展示-->
    <select id="getBlogsByTagId" resultMap="blogType">
        SELECT
            tb.*
        FROM
            t_blog tb
                JOIN
            t_blog_tags tbt
        WHERE
            tbt.tags_id = #{tag_id}
          AND
            tb.id = tbt.blogs_id
    </select>
    <!--4.9获取推荐博客，用于首页展示-->
    <select id="getRecommendBlogs" resultMap="blogType">
        select * from t_blog where recommend = 1 order by create_time desc limit #{size}
    </select>

    <resultMap id="blogType" type="blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="shareStatement" column="share_statement"></result>
        <result property="firstPicture" column="first_picture"/>
        <association property="type" column="type_id" javaType="type" select="selectType"/>
        <association property="user" column="user_id" javaType="user" select="selectUser"/>
        <collection property="tags" javaType="ArrayList" ofType="tag" column="id" select="selectTags"></collection>
    </resultMap>
    <select id="selectType" resultType="type">
        select *
        from t_type
        where id = #{type_id}
    </select>
    <select id="selectUser" resultType="user">
        select *
        from t_user
        where id = #{user_id}
    </select>
    <select id="selectTags" resultType="tag">
        select * from t_tag where id IN (select tags_id from t_blog_tags where blogs_id = #{id} )
    </select>












</mapper>